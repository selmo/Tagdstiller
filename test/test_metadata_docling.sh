#!/bin/bash

echo "==================================="
echo "üß™ Metadata ÏóîÎìúÌè¨Ïù∏Ìä∏ Docling ÌÖåÏä§Ìä∏"
echo "==================================="

# Î∞±ÏóîÎìú ÏÑúÎ≤Ñ Ìè¨Ìä∏ ÏÑ§Ï†ï
PORT=${1:-58000}
echo "Ìè¨Ìä∏: $PORT"

# ÌÖåÏä§Ìä∏ ÌååÏùº ÏÑ§Ï†ï
TEST_FILE="2. ÌÜµÌôîÏã†Ïö©Ï†ïÏ±Ö Ïö¥ÏòÅ.pdf"
echo "ÌÖåÏä§Ìä∏ ÌååÏùº: $TEST_FILE"
echo ""

# 1. Í∏∞Î≥∏ ÌååÏÑúÎ°ú Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ Ï∂îÏ∂ú
echo "1Ô∏è‚É£ Í∏∞Î≥∏ ÌååÏÑúÎ°ú Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ Ï∂îÏ∂ú..."
curl -s -G "http://localhost:$PORT/local-analysis/metadata" \
    --data-urlencode "file_path=$TEST_FILE" \
    | python -m json.tool > /tmp/metadata_default.json

if [ $? -eq 0 ]; then
    echo "   ‚úÖ ÏÑ±Í≥µ"
    echo "   ÌååÏÑú: $(cat /tmp/metadata_default.json | python -c "import sys, json; print(json.load(sys.stdin).get('parser_used', 'unknown'))" 2>/dev/null)"
else
    echo "   ‚ùå Ïã§Ìå®"
fi

echo ""

# 2. Docling ÌååÏÑúÎ°ú Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ Ï∂îÏ∂ú
echo "2Ô∏è‚É£ Docling ÌååÏÑúÎ°ú Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ Ï∂îÏ∂ú..."
curl -s -G "http://localhost:$PORT/local-analysis/metadata" \
    --data-urlencode "file_path=$TEST_FILE" \
    --data-urlencode "use_docling=true" \
    | python -m json.tool > /tmp/metadata_docling.json

if [ $? -eq 0 ]; then
    echo "   ‚úÖ ÏÑ±Í≥µ"
    echo "   ÌååÏÑú: $(cat /tmp/metadata_docling.json | python -c "import sys, json; print(json.load(sys.stdin).get('parser_used', 'unknown'))" 2>/dev/null)"
    
    # Docling Íµ¨Ï°∞ Ï†ïÎ≥¥ ÌôïÏù∏
    HAS_STRUCTURE=$(cat /tmp/metadata_docling.json | python -c "import sys, json; print('docling_structure' in json.load(sys.stdin))" 2>/dev/null)
    if [ "$HAS_STRUCTURE" = "True" ]; then
        echo "   üìä Docling Íµ¨Ï°∞ Ï†ïÎ≥¥: ÏûàÏùå"
        
        # ÌÖåÏù¥Î∏î Í∞úÏàò ÌôïÏù∏
        TABLE_COUNT=$(cat /tmp/metadata_docling.json | python -c "
import sys, json
data = json.load(sys.stdin)
structure = data.get('docling_structure', {})
tables = structure.get('tables', [])
print(len(tables))
" 2>/dev/null)
        echo "   üìã ÌÖåÏù¥Î∏î Ïàò: $TABLE_COUNT"
        
        # ÏÑπÏÖò Í∞úÏàò ÌôïÏù∏
        SECTION_COUNT=$(cat /tmp/metadata_docling.json | python -c "
import sys, json
data = json.load(sys.stdin)
structure = data.get('docling_structure', {})
sections = structure.get('sections', [])
print(len(sections))
" 2>/dev/null)
        echo "   üìë ÏÑπÏÖò Ïàò: $SECTION_COUNT"
    else
        echo "   üìä Docling Íµ¨Ï°∞ Ï†ïÎ≥¥: ÏóÜÏùå"
    fi
    
    # Ï†ÄÏû•Îêú ÌååÏùº ÌôïÏù∏
    METADATA_FILE=$(cat /tmp/metadata_docling.json | python -c "import sys, json; print(json.load(sys.stdin).get('metadata_file', ''))" 2>/dev/null)
    MARKDOWN_FILE=$(cat /tmp/metadata_docling.json | python -c "import sys, json; print(json.load(sys.stdin).get('markdown_file', ''))" 2>/dev/null)
    
    if [ -n "$METADATA_FILE" ]; then
        echo "   üíæ Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ ÌååÏùº: $(basename "$METADATA_FILE")"
    fi
    if [ -n "$MARKDOWN_FILE" ]; then
        echo "   üìù Markdown ÌååÏùº: $(basename "$MARKDOWN_FILE")"
    fi
else
    echo "   ‚ùå Ïã§Ìå®"
fi

echo ""
echo "==================================="
echo "üìä Í≤∞Í≥º ÌååÏùº"
echo "==================================="
echo "Í∏∞Î≥∏ ÌååÏÑú: /tmp/metadata_default.json"
echo "Docling ÌååÏÑú: /tmp/metadata_docling.json"
echo ""

# ÌååÏùº ÌÅ¨Í∏∞ ÎπÑÍµê
if [ -f /tmp/metadata_default.json ] && [ -f /tmp/metadata_docling.json ]; then
    DEFAULT_SIZE=$(stat -f%z /tmp/metadata_default.json 2>/dev/null || stat -c%s /tmp/metadata_default.json 2>/dev/null)
    DOCLING_SIZE=$(stat -f%z /tmp/metadata_docling.json 2>/dev/null || stat -c%s /tmp/metadata_docling.json 2>/dev/null)
    echo "ÌååÏùº ÌÅ¨Í∏∞:"
    echo "  Í∏∞Î≥∏: $DEFAULT_SIZE bytes"
    echo "  Docling: $DOCLING_SIZE bytes"
fi

echo "==================================="